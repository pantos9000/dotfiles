###############
# BEHAVIOR
###############

# default term type
set -g default-terminal "screen-256color"

# default shell
set-option -g default-shell "/usr/bin/fish"

# support logging out and back in
set -g update-environment "SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION"

# start with 1 as index
set -g base-index 1

# auto window titles
set -g set-titles on
set -g set-titles-string "tmux@#H (#S) [#I:#W]"

# works better with some vim key combinations
set -g xterm-keys on

# set key bindings in status line
set -g status-keys vi
setw -g mode-keys vi

# set max window history
set -g history-limit 10000

# disable mouse
set -g mouse off

# monitor for activity
setw -g monitor-activity on
set -g visual-activity off

# message display time in ms
set -g display-time 2000

# no delay for escape key press
set -sg escape-time 0

# set window size to size of attached client that had most recent activity
setw -g aggressive-resize on
setw -g window-size latest


###############
# THEME
###############

# active pane style
set -g window-active-style bg=default
set -g window-style bg=default

# pane border style
set -g pane-active-border-style fg=darkgreen,bg='#111111'
set -g pane-border-style fg=white,bg='#111111'

# status bar settings
set -g status-style fg=white,bg='#111111'
set -g status-position bottom
set -g status-interval 15   # update rate in s

# style status left
set -g status-left-style fg=white,bg='#111111'
set -g status-left '#[fg=green][#H|#S] '
set -g status-left-length 30

# style of window entries in status bar
set -g window-status-style fg=white,bg='#111111'
set -g window-status-current-style fg=cyan,bg='#111111',bold

# style status right
set -g status-right-style fg=white,bg='#111111'
set -g status-right ' #[fg=yellow][#(cut -d " " -f 1-3 /proc/loadavg)]#[default] #[fg=white][%d.%m.%y %H:%M]#[default]'
set -g status-right-length 45

# style of notification messages
set -g message-style fg=blue,bg=black,bright

# set width of main pane in layout main-horizontal or main-vertical
set -g main-pane-width '50%'

# split panes evenly
set-hook -g window-linked 'select-layout main-vertical'
set-hook -g after-split-window 'select-layout'
set-hook -g pane-exited 'select-layout'


###############
# BINDINGS
###############

# set prefix key to ctrl+a
unbind C-b
set -g prefix C-a
bind-key C-a send-prefix

# some screen indings
bind-key A command-prompt 'rename-window "%%"'
bind-key , command-prompt 'rename-window "%%"'
bind-key '"' choose-window -Z

# toggle mouse mode
bind-key m if-shell "tmux show -gv mouse | grep off > /dev/null" "set-option -g mouse on \; display 'Mouse: ON'" "set-option -g mouse off \; display 'Mouse: OFF'"

# reload config with
bind-key -n M-R source-file ~/.tmux.conf\; display "Config reloaded!"

# detach
bind-key -n M-x detach

# scroll
bind-key PageUp copy-mode -eu
bind-key Up copy-mode -e

# toggle layout free / main-vertical
bind-key -n M-Space \
    if-shell "tmux show -gv @layout | grep off > /dev/null" "\
        set-option -g @layout on \; \
        set-hook -g window-linked 'select-layout main-vertical' \; \
        set-hook -g after-split-window 'select-layout' \; \
        set-hook -g pane-exited 'select-layout' \
    " "\
        set-option -g @layout off \; \
        set-hook -gu window-linked \; \
        set-hook -gu after-split-window \; \
        set-hook -gu pane-exited \
    "

# window back and forth
bind-key -n M-Tab last-window

# zoom pane (for easy copying)
bind-key -n M-f resize-pane -Z
bind-key -n M-z resize-pane -Z

# kill pane
bind-key -n M-Q confirm kill-pane

# choose window in current session
bind-key -n M-w run-shell 'tmux choose-window -ZNwf"##{==:##{session_name},#{session_name}}"'

# choose window in all sessions
bind-key -n M-W choose-window -Z

# sync panes
bind-key -n M-s setw synchronize-panes

# new window
bind-key -n M-c new-window
bind-key -n M-Enter new-window

# rename window
bind-key -n M-n command-prompt 'rename-window %%'

# split window
bind-key -n M-h split-window -h -c '#{pane_current_path}'
bind-key -n M-v split-window -v -c '#{pane_current_path}'

# select panes
bind-key -n M-Right select-pane -R
bind-key -n M-Left  select-pane -L
bind-key -n M-Up    select-pane -U
bind-key -n M-Down  select-pane -D

# move/flip panes in same window
bind-key -n M-S-Right if-shell  "! tmux swap-pane -d -t {right-of}  > /dev/null" "move-pane  -h -t '.-'"
bind-key -n M-S-Left if-shell   "! tmux swap-pane -d -t {left-of}   > /dev/null" "move-pane -bh -t '.-'"
bind-key -n M-S-Up if-shell     "! tmux swap-pane -d -t {up-of}     > /dev/null" "move-pane -bv -t '.-'"
bind-key -n M-S-Down if-shell   "! tmux swap-pane -d -t {down-of}   > /dev/null" "move-pane  -v -t '.-'"

# previous and next window
bind-key -n C-M-Left previous-window
bind-key -n C-M-Right next-window

# select windows without back-and-forth
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
bind-key -n M-0 select-window -t 10

# select windows with back-and-forth
#bind-key -n M-1 if-shell -b "tmux list-windows | grep \\(active\\)$ | grep ^1:>/dev/null" "last-window" "select-window -t 1"
#bind-key -n M-2 if-shell -b "tmux list-windows | grep \\(active\\)$ | grep ^2:>/dev/null" "last-window" "select-window -t 2"
#bind-key -n M-3 if-shell -b "tmux list-windows | grep \\(active\\)$ | grep ^3:>/dev/null" "last-window" "select-window -t 3"
#bind-key -n M-4 if-shell -b "tmux list-windows | grep \\(active\\)$ | grep ^4:>/dev/null" "last-window" "select-window -t 4"
#bind-key -n M-5 if-shell -b "tmux list-windows | grep \\(active\\)$ | grep ^5:>/dev/null" "last-window" "select-window -t 5"
#bind-key -n M-6 if-shell -b "tmux list-windows | grep \\(active\\)$ | grep ^6:>/dev/null" "last-window" "select-window -t 6"
#bind-key -n M-7 if-shell -b "tmux list-windows | grep \\(active\\)$ | grep ^7:>/dev/null" "last-window" "select-window -t 7"
#bind-key -n M-8 if-shell -b "tmux list-windows | grep \\(active\\)$ | grep ^8:>/dev/null" "last-window" "select-window -t 8"
#bind-key -n M-9 if-shell -b "tmux list-windows | grep \\(active\\)$ | grep ^9:>/dev/null" "last-window" "select-window -t 9"
#bind-key -n M-0 if-shell -b "tmux list-windows | grep \\(active\\)$ | grep ^10:>/dev/null" "last-window" "select-window -t 10"

# move panes to other windows
bind-key -n M-'!' if-shell -b "tmux list-windows | grep ^1:>/dev/null" "join-pane -hd -t 1" "if-shell -b \"tmux list-panes | grep ^1:>/dev/null\" \"break-pane -d -t 1\" \"move-window -t 1\""
bind-key -n M-'"' if-shell -b "tmux list-windows | grep ^2:>/dev/null" "join-pane -hd -t 2" "if-shell -b \"tmux list-panes | grep ^1:>/dev/null\" \"break-pane -d -t 2\" \"move-window -t 2\""
bind-key -n M-'ยง' if-shell -b "tmux list-windows | grep ^3:>/dev/null" "join-pane -hd -t 3" "if-shell -b \"tmux list-panes | grep ^1:>/dev/null\" \"break-pane -d -t 3\" \"move-window -t 3\""
bind-key -n M-'$' if-shell -b "tmux list-windows | grep ^4:>/dev/null" "join-pane -hd -t 4" "if-shell -b \"tmux list-panes | grep ^1:>/dev/null\" \"break-pane -d -t 4\" \"move-window -t 4\""
bind-key -n M-'%' if-shell -b "tmux list-windows | grep ^5:>/dev/null" "join-pane -hd -t 5" "if-shell -b \"tmux list-panes | grep ^1:>/dev/null\" \"break-pane -d -t 5\" \"move-window -t 5\""
bind-key -n M-'&' if-shell -b "tmux list-windows | grep ^6:>/dev/null" "join-pane -hd -t 6" "if-shell -b \"tmux list-panes | grep ^1:>/dev/null\" \"break-pane -d -t 6\" \"move-window -t 6\""
bind-key -n M-'/' if-shell -b "tmux list-windows | grep ^7:>/dev/null" "join-pane -hd -t 7" "if-shell -b \"tmux list-panes | grep ^1:>/dev/null\" \"break-pane -d -t 7\" \"move-window -t 7\""
bind-key -n M-'(' if-shell -b "tmux list-windows | grep ^8:>/dev/null" "join-pane -hd -t 8" "if-shell -b \"tmux list-panes | grep ^1:>/dev/null\" \"break-pane -d -t 8\" \"move-window -t 8\""
bind-key -n M-')' if-shell -b "tmux list-windows | grep ^9:>/dev/null" "join-pane -hd -t 9" "if-shell -b \"tmux list-panes | grep ^1:>/dev/null\" \"break-pane -d -t 9\" \"move-window -t 9\""
bind-key -n M-'=' if-shell -b "tmux list-windows | grep ^10:>/dev/null" "join-pane -hd -t 10" "if-shell -b \"tmux list-panes | grep ^1:>/dev/null\" \"break-pane -d -t 10\" \"move-window -t 10\""

# resize pane with resize mode
bind-key -n M-r set key-table resize \; set status-right ' #[fg=red][resize] #[fg=yellow][#(cut -d " " -f 1-3 /proc/loadavg)]#[default] #[fg=white][%d.%m.%y %H:%M]#[default]'
bind-key -Tresize Right resize-pane -R 2
bind-key -Tresize Left resize-pane -L 2
bind-key -Tresize Up resize-pane -U 2
bind-key -Tresize Down resize-pane -D 2
bind-key -Tresize Enter set key-table root \; set status-right ' #[fg=yellow][#(cut -d " " -f 1-3 /proc/loadavg)]#[default] #[fg=white][%d.%m.%y %H:%M]#[default]'
bind-key -Tresize Escape set key-table root \; set status-right ' #[fg=yellow][#(cut -d " " -f 1-3 /proc/loadavg)]#[default] #[fg=white][%d.%m.%y %H:%M]#[default]'
bind-key -Tresize M-r set key-table root \; set status-right ' #[fg=yellow][#(cut -d " " -f 1-3 /proc/loadavg)]#[default] #[fg=white][%d.%m.%y %H:%M]#[default]'

# move whole windows with move mode
bind-key -n M-m set key-table move \; set status-right ' #[fg=red][move] #[fg=yellow][#(cut -d " " -f 1-3 /proc/loadavg)]#[default] #[fg=white][%d.%m.%y %H:%M]#[default]'
bind-key -Tmove 1 if-shell -b "tmux list-windows | grep ^1:>/dev/null" "swap-window -t 1" "move-window -t 1"
bind-key -Tmove 2 if-shell -b "tmux list-windows | grep ^2:>/dev/null" "swap-window -t 2" "move-window -t 2"
bind-key -Tmove 3 if-shell -b "tmux list-windows | grep ^3:>/dev/null" "swap-window -t 3" "move-window -t 3"
bind-key -Tmove 4 if-shell -b "tmux list-windows | grep ^4:>/dev/null" "swap-window -t 4" "move-window -t 4"
bind-key -Tmove 5 if-shell -b "tmux list-windows | grep ^5:>/dev/null" "swap-window -t 5" "move-window -t 5"
bind-key -Tmove 6 if-shell -b "tmux list-windows | grep ^6:>/dev/null" "swap-window -t 6" "move-window -t 6"
bind-key -Tmove 7 if-shell -b "tmux list-windows | grep ^7:>/dev/null" "swap-window -t 7" "move-window -t 7"
bind-key -Tmove 8 if-shell -b "tmux list-windows | grep ^8:>/dev/null" "swap-window -t 8" "move-window -t 8"
bind-key -Tmove 9 if-shell -b "tmux list-windows | grep ^9:>/dev/null" "swap-window -t 9" "move-window -t 9"
bind-key -Tmove 0 if-shell -b "tmux list-windows | grep ^10:>/dev/null" "swap-window -t 10" "move-window -t 10"
bind-key -Tmove Enter set key-table root \; set status-right ' #[fg=yellow][#(cut -d " " -f 1-3 /proc/loadavg)]#[default] #[fg=white][%d.%m.%y %H:%M]#[default]'
bind-key -Tmove Escape set key-table root \; set status-right ' #[fg=yellow][#(cut -d " " -f 1-3 /proc/loadavg)]#[default] #[fg=white][%d.%m.%y %H:%M]#[default]'
bind-key -Tmove M-m set key-table root \; set status-right ' #[fg=yellow][#(cut -d " " -f 1-3 /proc/loadavg)]#[default] #[fg=white][%d.%m.%y %H:%M]#[default]'

# compatibility mode
bind-key -n M-Escape set prefix None \; set key-table inert \; set status-right ' #[fg=red][inert] #[fg=yellow][#(cut -d " " -f 1-3 /proc/loadavg)]#[default] #[fg=white][%d.%m.%y %H:%M]#[default]'
bind-key -Tinert M-Escape set prefix C-a \; set key-table root \; set status-right ' #[fg=yellow][#(cut -d " " -f 1-3 /proc/loadavg)]#[default] #[fg=white][%d.%m.%y %H:%M]#[default]'
