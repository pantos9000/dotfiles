# display moved code
[diff]
    colorMoved = default

# use delta to display diffs
[pager]
    diff = delta
    log = delta
    reflog = delta
    show = delta

[delta]
    plus-style = "syntax #012800"
    minus-style = "syntax #340001"
    syntax-theme = Monokai Extended
    navigate = true
    line-numbers = true
    side-by-side = false

[interactive]
    diffFilter = delta --color-only

# use meld as mergetool
[merge]
    tool = meld
[mergetool "meld"]
    cmd = meld "$LOCAL" "$MERGED" "$REMOTE" --output "$MERGED"

# don't merge on pulls
[pull]
    rebase = true

# useful aliases
[alias]
    dummyuser = "! git config user.email 'me@y.not' && git config user.name 'Me' && echo 'successfully set dummy user for this repo'"
    shallowclone = "clone --depth 1"
    autosquash = "! git rebase -i --autosquash"
    undo = "! git reset --hard $(git rev-parse --abbrev-ref HEAD)@{${1-1}} #"
    unstage = "restore --staged"
    stashu = "stash -u --"

    fpush = "! git push --force-with-lease --force-if-includes origin $(git symbolic-ref --short HEAD) #"
    fpushb = "push --force-with-lease --force-if-includes origin"
    upush = "! git push -u origin $(git symbolic-ref --short HEAD) #"
    fpull = "! git fetch --all && git reset --hard origin/$(git symbolic-ref --short HEAD) #"
    pushtag = "push origin tag"

    graph = "log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all"

    diffc = "diff --cached"
    diffs = "diff --cached"
    stashs = "stash show -p"
    sbs = "! git -c delta.side-by-side=true" # no comment at the end, for following commands

    ri = rebase -i --update-refs
    ria = rebase -i --update-refs --autosquash
    fixup = commit --fixup
    ca = commit --amend
    cane = commit --amend --no-edit
    yolo = "! git commit --author='whatthecommit <null@whatthecommit.com>' -m \"[WIP] $(curl -s https://whatthecommit.com/index.txt)\" #"
    reset-author = "commit --amend --no-edit --reset-author"
    add-postfix = "! git filter-branch -f --msg-filter \"cat && echo -e '$1'\" $2..HEAD #"

[init]
    defaultBranch = master

[branch]
    sort = -committerdate
[fetch]
    writeCommitGraph = true

# directory-specific identities
#
# example config:
# [user]
#     email = foo@bar.baz
#     name = Foo
# [core]
#     sshCommand = ssh -i ~/.ssh/foo

[includeIf "gitdir:~/work/"]
    path = ~/work/.gitconfig

[includeIf "gitdir:~/pantos9000/"]
    path = ~/pantos9000/.gitconfig

[includeIf "gitdir:~/.local/share/chezmoi/"]
    path = ~/pantos9000/.gitconfig

[includeIf "gitdir:~/.password-store/"]
    path = ~/pantos9000/.gitconfig
